import { promises } from 'fs';
import path from 'path';
import prettierConfig from '@guardian/prettier';
import mkdirp from 'mkdirp';
import { format } from 'prettier';
import { transformPalette } from './create-alt-palette';
import { createReadme } from './create-readme';

const { writeFile, rm } = promises;

const VENDOR_PALETTE_PATH = path.resolve(
	__dirname,
	'..',
	'..',
	'vendor',
	'palettes',
);

// const warning = [
// 	'// DO NOT EDIT',
// 	'// this file is auto-generated by packages/@guardian/source-react-components/scripts/create-icons/index.ts',
// 	'',
// ].join('\n');

// now we start fetching SVGs and building our components
void (async () => {
	console.log('Removing old palettes');

	// remove any existing icons from a previous run
	try {
		await rm(VENDOR_PALETTE_PATH, { recursive: true });
	} catch (e) {
		// do nothing
	}

	// create the icons directory
	await mkdirp(VENDOR_PALETTE_PATH);

	console.log('Creating readme');

	// create a readme
	await writeFile(
		path.resolve(VENDOR_PALETTE_PATH, 'README.md'),
		createReadme(),
		'utf8',
	);

	const opacities = [0.4, 0.6];

	console.log(`Creating components`);

	// fetch the SVGs from Figma, create a react component from them using svgr
	// and save them both
	for (const opacity of opacities) {
		const { paletteName, paletteObject } = transformPalette(opacity);

		const filepath = path.resolve(VENDOR_PALETTE_PATH, `${paletteName}.json`);

		await writeFile(
			filepath,
			format(JSON.stringify(paletteObject), { filepath, ...prettierConfig }),
			'utf8',
		);
	}
})();
